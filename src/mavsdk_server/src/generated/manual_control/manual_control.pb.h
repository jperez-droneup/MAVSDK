// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manual_control/manual_control.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_manual_5fcontrol_2fmanual_5fcontrol_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_manual_5fcontrol_2fmanual_5fcontrol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023002 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_manual_5fcontrol_2fmanual_5fcontrol_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
namespace mavsdk {
namespace rpc {
namespace manual_control {
class ManualControlResult;
struct ManualControlResultDefaultTypeInternal;
extern ManualControlResultDefaultTypeInternal _ManualControlResult_default_instance_;
class SetManualControlInputRequest;
struct SetManualControlInputRequestDefaultTypeInternal;
extern SetManualControlInputRequestDefaultTypeInternal _SetManualControlInputRequest_default_instance_;
class SetManualControlInputResponse;
struct SetManualControlInputResponseDefaultTypeInternal;
extern SetManualControlInputResponseDefaultTypeInternal _SetManualControlInputResponse_default_instance_;
class StartAltitudeControlRequest;
struct StartAltitudeControlRequestDefaultTypeInternal;
extern StartAltitudeControlRequestDefaultTypeInternal _StartAltitudeControlRequest_default_instance_;
class StartAltitudeControlResponse;
struct StartAltitudeControlResponseDefaultTypeInternal;
extern StartAltitudeControlResponseDefaultTypeInternal _StartAltitudeControlResponse_default_instance_;
class StartPositionControlRequest;
struct StartPositionControlRequestDefaultTypeInternal;
extern StartPositionControlRequestDefaultTypeInternal _StartPositionControlRequest_default_instance_;
class StartPositionControlResponse;
struct StartPositionControlResponseDefaultTypeInternal;
extern StartPositionControlResponseDefaultTypeInternal _StartPositionControlResponse_default_instance_;
}  // namespace manual_control
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template <>
::mavsdk::rpc::manual_control::ManualControlResult* Arena::CreateMaybeMessage<::mavsdk::rpc::manual_control::ManualControlResult>(Arena*);
template <>
::mavsdk::rpc::manual_control::SetManualControlInputRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::manual_control::SetManualControlInputRequest>(Arena*);
template <>
::mavsdk::rpc::manual_control::SetManualControlInputResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::manual_control::SetManualControlInputResponse>(Arena*);
template <>
::mavsdk::rpc::manual_control::StartAltitudeControlRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::manual_control::StartAltitudeControlRequest>(Arena*);
template <>
::mavsdk::rpc::manual_control::StartAltitudeControlResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::manual_control::StartAltitudeControlResponse>(Arena*);
template <>
::mavsdk::rpc::manual_control::StartPositionControlRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::manual_control::StartPositionControlRequest>(Arena*);
template <>
::mavsdk::rpc::manual_control::StartPositionControlResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::manual_control::StartPositionControlResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace mavsdk {
namespace rpc {
namespace manual_control {
enum ManualControlResult_Result : int {
  ManualControlResult_Result_RESULT_UNKNOWN = 0,
  ManualControlResult_Result_RESULT_SUCCESS = 1,
  ManualControlResult_Result_RESULT_NO_SYSTEM = 2,
  ManualControlResult_Result_RESULT_CONNECTION_ERROR = 3,
  ManualControlResult_Result_RESULT_BUSY = 4,
  ManualControlResult_Result_RESULT_COMMAND_DENIED = 5,
  ManualControlResult_Result_RESULT_TIMEOUT = 6,
  ManualControlResult_Result_RESULT_INPUT_OUT_OF_RANGE = 7,
  ManualControlResult_Result_RESULT_INPUT_NOT_SET = 8,
  ManualControlResult_Result_ManualControlResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ManualControlResult_Result_ManualControlResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ManualControlResult_Result_IsValid(int value);
constexpr ManualControlResult_Result ManualControlResult_Result_Result_MIN = static_cast<ManualControlResult_Result>(0);
constexpr ManualControlResult_Result ManualControlResult_Result_Result_MAX = static_cast<ManualControlResult_Result>(8);
constexpr int ManualControlResult_Result_Result_ARRAYSIZE = 8 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
ManualControlResult_Result_descriptor();
template <typename T>
const std::string& ManualControlResult_Result_Name(T value) {
  static_assert(std::is_same<T, ManualControlResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return ManualControlResult_Result_Name(static_cast<ManualControlResult_Result>(value));
}
template <>
inline const std::string& ManualControlResult_Result_Name(ManualControlResult_Result value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<ManualControlResult_Result_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool ManualControlResult_Result_Parse(absl::string_view name, ManualControlResult_Result* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ManualControlResult_Result>(
      ManualControlResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class StartPositionControlRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.manual_control.StartPositionControlRequest) */ {
 public:
  inline StartPositionControlRequest() : StartPositionControlRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartPositionControlRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartPositionControlRequest(const StartPositionControlRequest& from);
  StartPositionControlRequest(StartPositionControlRequest&& from) noexcept
    : StartPositionControlRequest() {
    *this = ::std::move(from);
  }

  inline StartPositionControlRequest& operator=(const StartPositionControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartPositionControlRequest& operator=(StartPositionControlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartPositionControlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartPositionControlRequest* internal_default_instance() {
    return reinterpret_cast<const StartPositionControlRequest*>(
               &_StartPositionControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StartPositionControlRequest& a, StartPositionControlRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StartPositionControlRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartPositionControlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartPositionControlRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartPositionControlRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StartPositionControlRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StartPositionControlRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.manual_control.StartPositionControlRequest";
  }
  protected:
  explicit StartPositionControlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.manual_control.StartPositionControlRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
};// -------------------------------------------------------------------

class StartPositionControlResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.manual_control.StartPositionControlResponse) */ {
 public:
  inline StartPositionControlResponse() : StartPositionControlResponse(nullptr) {}
  ~StartPositionControlResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartPositionControlResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartPositionControlResponse(const StartPositionControlResponse& from);
  StartPositionControlResponse(StartPositionControlResponse&& from) noexcept
    : StartPositionControlResponse() {
    *this = ::std::move(from);
  }

  inline StartPositionControlResponse& operator=(const StartPositionControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartPositionControlResponse& operator=(StartPositionControlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartPositionControlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartPositionControlResponse* internal_default_instance() {
    return reinterpret_cast<const StartPositionControlResponse*>(
               &_StartPositionControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StartPositionControlResponse& a, StartPositionControlResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StartPositionControlResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartPositionControlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartPositionControlResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartPositionControlResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const StartPositionControlResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const StartPositionControlResponse& from) {
    StartPositionControlResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartPositionControlResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.manual_control.StartPositionControlResponse";
  }
  protected:
  explicit StartPositionControlResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kManualControlResultFieldNumber = 1,
  };
  // .mavsdk.rpc.manual_control.ManualControlResult manual_control_result = 1;
  bool has_manual_control_result() const;
  void clear_manual_control_result() ;
  const ::mavsdk::rpc::manual_control::ManualControlResult& manual_control_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::manual_control::ManualControlResult* release_manual_control_result();
  ::mavsdk::rpc::manual_control::ManualControlResult* mutable_manual_control_result();
  void set_allocated_manual_control_result(::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result);
  private:
  const ::mavsdk::rpc::manual_control::ManualControlResult& _internal_manual_control_result() const;
  ::mavsdk::rpc::manual_control::ManualControlResult* _internal_mutable_manual_control_result();
  public:
  void unsafe_arena_set_allocated_manual_control_result(
      ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result);
  ::mavsdk::rpc::manual_control::ManualControlResult* unsafe_arena_release_manual_control_result();
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.manual_control.StartPositionControlResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
};// -------------------------------------------------------------------

class StartAltitudeControlRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.manual_control.StartAltitudeControlRequest) */ {
 public:
  inline StartAltitudeControlRequest() : StartAltitudeControlRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartAltitudeControlRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartAltitudeControlRequest(const StartAltitudeControlRequest& from);
  StartAltitudeControlRequest(StartAltitudeControlRequest&& from) noexcept
    : StartAltitudeControlRequest() {
    *this = ::std::move(from);
  }

  inline StartAltitudeControlRequest& operator=(const StartAltitudeControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartAltitudeControlRequest& operator=(StartAltitudeControlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartAltitudeControlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartAltitudeControlRequest* internal_default_instance() {
    return reinterpret_cast<const StartAltitudeControlRequest*>(
               &_StartAltitudeControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StartAltitudeControlRequest& a, StartAltitudeControlRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StartAltitudeControlRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartAltitudeControlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartAltitudeControlRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartAltitudeControlRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StartAltitudeControlRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StartAltitudeControlRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.manual_control.StartAltitudeControlRequest";
  }
  protected:
  explicit StartAltitudeControlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.manual_control.StartAltitudeControlRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
};// -------------------------------------------------------------------

class StartAltitudeControlResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.manual_control.StartAltitudeControlResponse) */ {
 public:
  inline StartAltitudeControlResponse() : StartAltitudeControlResponse(nullptr) {}
  ~StartAltitudeControlResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartAltitudeControlResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartAltitudeControlResponse(const StartAltitudeControlResponse& from);
  StartAltitudeControlResponse(StartAltitudeControlResponse&& from) noexcept
    : StartAltitudeControlResponse() {
    *this = ::std::move(from);
  }

  inline StartAltitudeControlResponse& operator=(const StartAltitudeControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartAltitudeControlResponse& operator=(StartAltitudeControlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartAltitudeControlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartAltitudeControlResponse* internal_default_instance() {
    return reinterpret_cast<const StartAltitudeControlResponse*>(
               &_StartAltitudeControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(StartAltitudeControlResponse& a, StartAltitudeControlResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StartAltitudeControlResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartAltitudeControlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartAltitudeControlResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartAltitudeControlResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const StartAltitudeControlResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const StartAltitudeControlResponse& from) {
    StartAltitudeControlResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartAltitudeControlResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.manual_control.StartAltitudeControlResponse";
  }
  protected:
  explicit StartAltitudeControlResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kManualControlResultFieldNumber = 1,
  };
  // .mavsdk.rpc.manual_control.ManualControlResult manual_control_result = 1;
  bool has_manual_control_result() const;
  void clear_manual_control_result() ;
  const ::mavsdk::rpc::manual_control::ManualControlResult& manual_control_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::manual_control::ManualControlResult* release_manual_control_result();
  ::mavsdk::rpc::manual_control::ManualControlResult* mutable_manual_control_result();
  void set_allocated_manual_control_result(::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result);
  private:
  const ::mavsdk::rpc::manual_control::ManualControlResult& _internal_manual_control_result() const;
  ::mavsdk::rpc::manual_control::ManualControlResult* _internal_mutable_manual_control_result();
  public:
  void unsafe_arena_set_allocated_manual_control_result(
      ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result);
  ::mavsdk::rpc::manual_control::ManualControlResult* unsafe_arena_release_manual_control_result();
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.manual_control.StartAltitudeControlResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
};// -------------------------------------------------------------------

class SetManualControlInputRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.manual_control.SetManualControlInputRequest) */ {
 public:
  inline SetManualControlInputRequest() : SetManualControlInputRequest(nullptr) {}
  ~SetManualControlInputRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetManualControlInputRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetManualControlInputRequest(const SetManualControlInputRequest& from);
  SetManualControlInputRequest(SetManualControlInputRequest&& from) noexcept
    : SetManualControlInputRequest() {
    *this = ::std::move(from);
  }

  inline SetManualControlInputRequest& operator=(const SetManualControlInputRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetManualControlInputRequest& operator=(SetManualControlInputRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetManualControlInputRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetManualControlInputRequest* internal_default_instance() {
    return reinterpret_cast<const SetManualControlInputRequest*>(
               &_SetManualControlInputRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SetManualControlInputRequest& a, SetManualControlInputRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetManualControlInputRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetManualControlInputRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetManualControlInputRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetManualControlInputRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetManualControlInputRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SetManualControlInputRequest& from) {
    SetManualControlInputRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetManualControlInputRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.manual_control.SetManualControlInputRequest";
  }
  protected:
  explicit SetManualControlInputRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kRFieldNumber = 4,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // float r = 4;
  void clear_r() ;
  float r() const;
  void set_r(float value);

  private:
  float _internal_r() const;
  void _internal_set_r(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.manual_control.SetManualControlInputRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    float r_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
};// -------------------------------------------------------------------

class SetManualControlInputResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.manual_control.SetManualControlInputResponse) */ {
 public:
  inline SetManualControlInputResponse() : SetManualControlInputResponse(nullptr) {}
  ~SetManualControlInputResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetManualControlInputResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetManualControlInputResponse(const SetManualControlInputResponse& from);
  SetManualControlInputResponse(SetManualControlInputResponse&& from) noexcept
    : SetManualControlInputResponse() {
    *this = ::std::move(from);
  }

  inline SetManualControlInputResponse& operator=(const SetManualControlInputResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetManualControlInputResponse& operator=(SetManualControlInputResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetManualControlInputResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetManualControlInputResponse* internal_default_instance() {
    return reinterpret_cast<const SetManualControlInputResponse*>(
               &_SetManualControlInputResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SetManualControlInputResponse& a, SetManualControlInputResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetManualControlInputResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetManualControlInputResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetManualControlInputResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetManualControlInputResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetManualControlInputResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SetManualControlInputResponse& from) {
    SetManualControlInputResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetManualControlInputResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.manual_control.SetManualControlInputResponse";
  }
  protected:
  explicit SetManualControlInputResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kManualControlResultFieldNumber = 1,
  };
  // .mavsdk.rpc.manual_control.ManualControlResult manual_control_result = 1;
  bool has_manual_control_result() const;
  void clear_manual_control_result() ;
  const ::mavsdk::rpc::manual_control::ManualControlResult& manual_control_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::manual_control::ManualControlResult* release_manual_control_result();
  ::mavsdk::rpc::manual_control::ManualControlResult* mutable_manual_control_result();
  void set_allocated_manual_control_result(::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result);
  private:
  const ::mavsdk::rpc::manual_control::ManualControlResult& _internal_manual_control_result() const;
  ::mavsdk::rpc::manual_control::ManualControlResult* _internal_mutable_manual_control_result();
  public:
  void unsafe_arena_set_allocated_manual_control_result(
      ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result);
  ::mavsdk::rpc::manual_control::ManualControlResult* unsafe_arena_release_manual_control_result();
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.manual_control.SetManualControlInputResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
};// -------------------------------------------------------------------

class ManualControlResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.manual_control.ManualControlResult) */ {
 public:
  inline ManualControlResult() : ManualControlResult(nullptr) {}
  ~ManualControlResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ManualControlResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ManualControlResult(const ManualControlResult& from);
  ManualControlResult(ManualControlResult&& from) noexcept
    : ManualControlResult() {
    *this = ::std::move(from);
  }

  inline ManualControlResult& operator=(const ManualControlResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualControlResult& operator=(ManualControlResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManualControlResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ManualControlResult* internal_default_instance() {
    return reinterpret_cast<const ManualControlResult*>(
               &_ManualControlResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ManualControlResult& a, ManualControlResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ManualControlResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualControlResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManualControlResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ManualControlResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ManualControlResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ManualControlResult& from) {
    ManualControlResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualControlResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.manual_control.ManualControlResult";
  }
  protected:
  explicit ManualControlResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = ManualControlResult_Result;
  static constexpr Result RESULT_UNKNOWN = ManualControlResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = ManualControlResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = ManualControlResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_CONNECTION_ERROR = ManualControlResult_Result_RESULT_CONNECTION_ERROR;
  static constexpr Result RESULT_BUSY = ManualControlResult_Result_RESULT_BUSY;
  static constexpr Result RESULT_COMMAND_DENIED = ManualControlResult_Result_RESULT_COMMAND_DENIED;
  static constexpr Result RESULT_TIMEOUT = ManualControlResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_INPUT_OUT_OF_RANGE = ManualControlResult_Result_RESULT_INPUT_OUT_OF_RANGE;
  static constexpr Result RESULT_INPUT_NOT_SET = ManualControlResult_Result_RESULT_INPUT_NOT_SET;
  static inline bool Result_IsValid(int value) {
    return ManualControlResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = ManualControlResult_Result_Result_MIN;
  static constexpr Result Result_MAX = ManualControlResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = ManualControlResult_Result_Result_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Result_descriptor() {
    return ManualControlResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return ManualControlResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return ManualControlResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* ptr);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.manual_control.ManualControlResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::manual_control::ManualControlResult_Result result() const;
  void set_result(::mavsdk::rpc::manual_control::ManualControlResult_Result value);

  private:
  ::mavsdk::rpc::manual_control::ManualControlResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::manual_control::ManualControlResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.manual_control.ManualControlResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_manual_5fcontrol_2fmanual_5fcontrol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StartPositionControlRequest

// -------------------------------------------------------------------

// StartPositionControlResponse

// .mavsdk.rpc.manual_control.ManualControlResult manual_control_result = 1;
inline bool StartPositionControlResponse::has_manual_control_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.manual_control_result_ != nullptr);
  return value;
}
inline void StartPositionControlResponse::clear_manual_control_result() {
  if (_impl_.manual_control_result_ != nullptr) _impl_.manual_control_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::manual_control::ManualControlResult& StartPositionControlResponse::_internal_manual_control_result() const {
  const ::mavsdk::rpc::manual_control::ManualControlResult* p = _impl_.manual_control_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::manual_control::ManualControlResult&>(
      ::mavsdk::rpc::manual_control::_ManualControlResult_default_instance_);
}
inline const ::mavsdk::rpc::manual_control::ManualControlResult& StartPositionControlResponse::manual_control_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.StartPositionControlResponse.manual_control_result)
  return _internal_manual_control_result();
}
inline void StartPositionControlResponse::unsafe_arena_set_allocated_manual_control_result(
    ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.manual_control_result_);
  }
  _impl_.manual_control_result_ = manual_control_result;
  if (manual_control_result) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.manual_control.StartPositionControlResponse.manual_control_result)
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartPositionControlResponse::release_manual_control_result() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::manual_control::ManualControlResult* temp = _impl_.manual_control_result_;
  _impl_.manual_control_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartPositionControlResponse::unsafe_arena_release_manual_control_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.manual_control.StartPositionControlResponse.manual_control_result)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::manual_control::ManualControlResult* temp = _impl_.manual_control_result_;
  _impl_.manual_control_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartPositionControlResponse::_internal_mutable_manual_control_result() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.manual_control_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::manual_control::ManualControlResult>(GetArenaForAllocation());
    _impl_.manual_control_result_ = p;
  }
  return _impl_.manual_control_result_;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartPositionControlResponse::mutable_manual_control_result() {
  ::mavsdk::rpc::manual_control::ManualControlResult* _msg = _internal_mutable_manual_control_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.manual_control.StartPositionControlResponse.manual_control_result)
  return _msg;
}
inline void StartPositionControlResponse::set_allocated_manual_control_result(::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.manual_control_result_;
  }
  if (manual_control_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(manual_control_result);
    if (message_arena != submessage_arena) {
      manual_control_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, manual_control_result, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.manual_control_result_ = manual_control_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.manual_control.StartPositionControlResponse.manual_control_result)
}

// -------------------------------------------------------------------

// StartAltitudeControlRequest

// -------------------------------------------------------------------

// StartAltitudeControlResponse

// .mavsdk.rpc.manual_control.ManualControlResult manual_control_result = 1;
inline bool StartAltitudeControlResponse::has_manual_control_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.manual_control_result_ != nullptr);
  return value;
}
inline void StartAltitudeControlResponse::clear_manual_control_result() {
  if (_impl_.manual_control_result_ != nullptr) _impl_.manual_control_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::manual_control::ManualControlResult& StartAltitudeControlResponse::_internal_manual_control_result() const {
  const ::mavsdk::rpc::manual_control::ManualControlResult* p = _impl_.manual_control_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::manual_control::ManualControlResult&>(
      ::mavsdk::rpc::manual_control::_ManualControlResult_default_instance_);
}
inline const ::mavsdk::rpc::manual_control::ManualControlResult& StartAltitudeControlResponse::manual_control_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.StartAltitudeControlResponse.manual_control_result)
  return _internal_manual_control_result();
}
inline void StartAltitudeControlResponse::unsafe_arena_set_allocated_manual_control_result(
    ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.manual_control_result_);
  }
  _impl_.manual_control_result_ = manual_control_result;
  if (manual_control_result) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.manual_control.StartAltitudeControlResponse.manual_control_result)
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartAltitudeControlResponse::release_manual_control_result() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::manual_control::ManualControlResult* temp = _impl_.manual_control_result_;
  _impl_.manual_control_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartAltitudeControlResponse::unsafe_arena_release_manual_control_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.manual_control.StartAltitudeControlResponse.manual_control_result)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::manual_control::ManualControlResult* temp = _impl_.manual_control_result_;
  _impl_.manual_control_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartAltitudeControlResponse::_internal_mutable_manual_control_result() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.manual_control_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::manual_control::ManualControlResult>(GetArenaForAllocation());
    _impl_.manual_control_result_ = p;
  }
  return _impl_.manual_control_result_;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* StartAltitudeControlResponse::mutable_manual_control_result() {
  ::mavsdk::rpc::manual_control::ManualControlResult* _msg = _internal_mutable_manual_control_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.manual_control.StartAltitudeControlResponse.manual_control_result)
  return _msg;
}
inline void StartAltitudeControlResponse::set_allocated_manual_control_result(::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.manual_control_result_;
  }
  if (manual_control_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(manual_control_result);
    if (message_arena != submessage_arena) {
      manual_control_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, manual_control_result, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.manual_control_result_ = manual_control_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.manual_control.StartAltitudeControlResponse.manual_control_result)
}

// -------------------------------------------------------------------

// SetManualControlInputRequest

// float x = 1;
inline void SetManualControlInputRequest::clear_x() {
  _impl_.x_ = 0;
}
inline float SetManualControlInputRequest::x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.SetManualControlInputRequest.x)
  return _internal_x();
}
inline void SetManualControlInputRequest::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.manual_control.SetManualControlInputRequest.x)
}
inline float SetManualControlInputRequest::_internal_x() const {
  return _impl_.x_;
}
inline void SetManualControlInputRequest::_internal_set_x(float value) {
  ;
  _impl_.x_ = value;
}

// float y = 2;
inline void SetManualControlInputRequest::clear_y() {
  _impl_.y_ = 0;
}
inline float SetManualControlInputRequest::y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.SetManualControlInputRequest.y)
  return _internal_y();
}
inline void SetManualControlInputRequest::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.manual_control.SetManualControlInputRequest.y)
}
inline float SetManualControlInputRequest::_internal_y() const {
  return _impl_.y_;
}
inline void SetManualControlInputRequest::_internal_set_y(float value) {
  ;
  _impl_.y_ = value;
}

// float z = 3;
inline void SetManualControlInputRequest::clear_z() {
  _impl_.z_ = 0;
}
inline float SetManualControlInputRequest::z() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.SetManualControlInputRequest.z)
  return _internal_z();
}
inline void SetManualControlInputRequest::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.manual_control.SetManualControlInputRequest.z)
}
inline float SetManualControlInputRequest::_internal_z() const {
  return _impl_.z_;
}
inline void SetManualControlInputRequest::_internal_set_z(float value) {
  ;
  _impl_.z_ = value;
}

// float r = 4;
inline void SetManualControlInputRequest::clear_r() {
  _impl_.r_ = 0;
}
inline float SetManualControlInputRequest::r() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.SetManualControlInputRequest.r)
  return _internal_r();
}
inline void SetManualControlInputRequest::set_r(float value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.manual_control.SetManualControlInputRequest.r)
}
inline float SetManualControlInputRequest::_internal_r() const {
  return _impl_.r_;
}
inline void SetManualControlInputRequest::_internal_set_r(float value) {
  ;
  _impl_.r_ = value;
}

// -------------------------------------------------------------------

// SetManualControlInputResponse

// .mavsdk.rpc.manual_control.ManualControlResult manual_control_result = 1;
inline bool SetManualControlInputResponse::has_manual_control_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.manual_control_result_ != nullptr);
  return value;
}
inline void SetManualControlInputResponse::clear_manual_control_result() {
  if (_impl_.manual_control_result_ != nullptr) _impl_.manual_control_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::manual_control::ManualControlResult& SetManualControlInputResponse::_internal_manual_control_result() const {
  const ::mavsdk::rpc::manual_control::ManualControlResult* p = _impl_.manual_control_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::manual_control::ManualControlResult&>(
      ::mavsdk::rpc::manual_control::_ManualControlResult_default_instance_);
}
inline const ::mavsdk::rpc::manual_control::ManualControlResult& SetManualControlInputResponse::manual_control_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.SetManualControlInputResponse.manual_control_result)
  return _internal_manual_control_result();
}
inline void SetManualControlInputResponse::unsafe_arena_set_allocated_manual_control_result(
    ::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.manual_control_result_);
  }
  _impl_.manual_control_result_ = manual_control_result;
  if (manual_control_result) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.manual_control.SetManualControlInputResponse.manual_control_result)
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* SetManualControlInputResponse::release_manual_control_result() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::manual_control::ManualControlResult* temp = _impl_.manual_control_result_;
  _impl_.manual_control_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* SetManualControlInputResponse::unsafe_arena_release_manual_control_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.manual_control.SetManualControlInputResponse.manual_control_result)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::manual_control::ManualControlResult* temp = _impl_.manual_control_result_;
  _impl_.manual_control_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* SetManualControlInputResponse::_internal_mutable_manual_control_result() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.manual_control_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::manual_control::ManualControlResult>(GetArenaForAllocation());
    _impl_.manual_control_result_ = p;
  }
  return _impl_.manual_control_result_;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult* SetManualControlInputResponse::mutable_manual_control_result() {
  ::mavsdk::rpc::manual_control::ManualControlResult* _msg = _internal_mutable_manual_control_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.manual_control.SetManualControlInputResponse.manual_control_result)
  return _msg;
}
inline void SetManualControlInputResponse::set_allocated_manual_control_result(::mavsdk::rpc::manual_control::ManualControlResult* manual_control_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.manual_control_result_;
  }
  if (manual_control_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(manual_control_result);
    if (message_arena != submessage_arena) {
      manual_control_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, manual_control_result, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.manual_control_result_ = manual_control_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.manual_control.SetManualControlInputResponse.manual_control_result)
}

// -------------------------------------------------------------------

// ManualControlResult

// .mavsdk.rpc.manual_control.ManualControlResult.Result result = 1;
inline void ManualControlResult::clear_result() {
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::manual_control::ManualControlResult_Result ManualControlResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.ManualControlResult.result)
  return _internal_result();
}
inline void ManualControlResult::set_result(::mavsdk::rpc::manual_control::ManualControlResult_Result value) {
   _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.manual_control.ManualControlResult.result)
}
inline ::mavsdk::rpc::manual_control::ManualControlResult_Result ManualControlResult::_internal_result() const {
  return static_cast<::mavsdk::rpc::manual_control::ManualControlResult_Result>(_impl_.result_);
}
inline void ManualControlResult::_internal_set_result(::mavsdk::rpc::manual_control::ManualControlResult_Result value) {
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void ManualControlResult::clear_result_str() {
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& ManualControlResult::result_str() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.manual_control.ManualControlResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ManualControlResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.manual_control.ManualControlResult.result_str)
}
inline std::string* ManualControlResult::mutable_result_str() {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.manual_control.ManualControlResult.result_str)
  return _s;
}
inline const std::string& ManualControlResult::_internal_result_str() const {
  return _impl_.result_str_.Get();
}
inline void ManualControlResult::_internal_set_result_str(const std::string& value) {
  ;


  _impl_.result_str_.Set(value, GetArenaForAllocation());
}
inline std::string* ManualControlResult::_internal_mutable_result_str() {
  ;
  return _impl_.result_str_.Mutable( GetArenaForAllocation());
}
inline std::string* ManualControlResult::release_result_str() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.manual_control.ManualControlResult.result_str)
  return _impl_.result_str_.Release();
}
inline void ManualControlResult::set_allocated_result_str(std::string* value) {
  _impl_.result_str_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.manual_control.ManualControlResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace manual_control
}  // namespace rpc
}  // namespace mavsdk


PROTOBUF_NAMESPACE_OPEN

template <>
struct is_proto_enum<::mavsdk::rpc::manual_control::ManualControlResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::manual_control::ManualControlResult_Result>() {
  return ::mavsdk::rpc::manual_control::ManualControlResult_Result_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_manual_5fcontrol_2fmanual_5fcontrol_2eproto_2epb_2eh
